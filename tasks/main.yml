---
# tasks file for role-prometheus_node_exporter
#

#
# Install packages for each OS family
#

- name: Debian OS family
  when: ansible_os_family == 'Debian'
  block:
    - name: Ensure packages are installed for Debian OS family
      ansible.builtin.apt:
        name:
          - prometheus-node-exporter

- name: RedHat 8/9 block
  when: ansible_os_family == 'RedHat' and (ansible_distribution_major_version | int) >= 8
  block:
    - name: Ensure EPEL packages can be installed for RedHat 8/9
      ansible.builtin.dnf:
        name:
          - yum-utils
    - name: Enable crb repository for RedHat 9
      ansible.builtin.command: dnf config-manager --set-enabled crb
      changed_when: false
      when: ansible_distribution_major_version | int == 9
    - name: Ensure EPEL repo is installed for RedHat 8/9
      ansible.builtin.dnf:
        name:
          - epel-release
    - name: Ensure packages are installed for RedHat 8/9
      ansible.builtin.dnf:
        name:
          - golang-github-prometheus-node-exporter

#
# Configure
# RedHat all versions
#

- name: RedHat
  when: ansible_os_family == 'RedHat'
  block:
    - name: Ensure status firewalld is registered
      ansible.builtin.command: systemctl status firewalld
      register: firewalld_status
      changed_when: false
      failed_when: false
      check_mode: false
    - name: Ensure when firewalld already running it is configured to allow node_exporter to be exposed from the prometheus_ip
      ansible.posix.firewalld:
        state: enabled
        rich_rule: 'rule family="ipv4" source address="{{ prometheus_ip }}" port port="{{ item }}" protocol="tcp" accept'
        immediate: true
        permanent: true
      loop:
        - 9100
        - "{{ export_docker_port }}"
      when: firewalld_status.rc == 0 and prometheus_ip is defined
    - name: Ensure when firewalld already running it is configured to allow node_exporter to be exposed
      ansible.posix.firewalld:
        state: enabled
        port: "{{ item }}"
        immediate: true
        permanent: true
      loop:
        - 9100/tcp
      when: firewalld_status.rc == 0 and prometheus_ip is not defined

#
# Configure
# Debian
#

- name: Configure listen address
  when: ansible_os_family == 'Debian'
  block:
    - name: Ensure port is configured if specified
      ansible.builtin.lineinfile:
        path: /etc/default/prometheus-node-exporter
        line: ARGS="--web.listen-address=:{{ port }}"
        regexp: '^ARGS=""'
      notify: Restart prometheus-node-exporter
      when: port is defined

#
# Configure all OS families
#

- name: Ensure docker metrics are exposed
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /etc/docker/{{ item }}
    mode: "0644"
  loop:
    - daemon.json
  notify: Restart prometheus-node-exporter
  when: export_docker

#
# Start service Debian/RedHat
#

- name: Debian
  when: ansible_os_family == 'Debian'
  block:
    - name: Ensure prometheus-node-exporter is running
      ansible.builtin.service:
        name: prometheus-node-exporter
        state: started
        enabled: true

- name: RedHat
  when: ansible_os_family == 'RedHat'
  block:
    - name: Ensure prometheus-node-exporter is running
      ansible.builtin.service:
        name: prometheus-node-exporter
        state: started
        enabled: true

...
